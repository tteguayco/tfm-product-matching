import common
import time
import re

DETAIL_URLS_FILEPATH = "../_data/DigitalCameraDetailPageURLs.txt"
OUTPUT_FILEPATH = "../_data/DigitalCameraDatabase.csv"

REGEX_BRAND = "Brand:.{1,50}?class=\"bold\">\s{0,4}([^<]{1,50}?)<"
REGEX_MODEL = "Model:.{1,50}?class=\"bold\">\s{0,4}([^<]{1,50}?)<"
REGEX_MEGAPIXELS = "Megapixels:.{1,50}?class=\"bold\">\s{0,4}([^<]{1,50}?)<"
REGEX_SENSOR = "Sensor:.{1,50}?class=\"bold\">\s{0,4}([^<]{1,50}?)<"


class Camera():

    def __init__(self, brand="", model="", megapixels="", sensor="", url=""):
        self.brand = brand
        self.model = model
        self.megapixels = megapixels
        self.sensor = sensor
        self.url = url

class ProductDetailFilter():

    def __init__(self):
        self.filtered_data = []

    def filter_field(self, html, regex):
        m = re.search(regex, html, re.MULTILINE)
        
        if m:
            return m.groups(1)[0].strip()

        return ""

    def filter_data(self, html, url):
        camera = Camera()

        camera.brand = self.filter_field(html, REGEX_BRAND)
        camera.model = self.filter_field(html, REGEX_MODEL)
        camera.megapixels = self.filter_field(html, REGEX_MEGAPIXELS)
        camera.sensor = self.filter_field(html, REGEX_SENSOR)
        camera.url = url

        self.filtered_data.append(camera)

    def dump2csv(self, output_filepath):
        with open(output_filepath, "w+") as f:
            f.write("BRAND, MODEL, MEGAPIXELS, SENSOR, URL\n")

            for camera in self.filtered_data:
                f.write(camera.brand + ",")
                f.write(camera.model + ",")
                f.write(camera.megapixels + ",")
                f.write(camera.sensor + ",")
                f.write(camera.url + "\n")


if __name__ == "__main__":
    productDetailFilter = ProductDetailFilter()
    start_time = time.time()

    # Navigate URLs contained in file generated by URLCollector object
    with open(DETAIL_URLS_FILEPATH, "r") as f:
        for url in f:
            curated_url = url.strip()
            html = common.get_html(curated_url)
            print("Filtering camera in URL: {}".format(curated_url))
            productDetailFilter.filter_data(html, curated_url)

            break

    productDetailFilter.dump2csv(OUTPUT_FILEPATH)
    finish_time = time.time()
    
    print("Data exported to file. Process took {} seconds."
        .format(round(finish_time - start_time, 3)))
